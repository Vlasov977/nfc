/**
 * demo1.js
 * http://www.codrops.com
 *
 * Licensed under the MIT license.
 * http://www.opensource.org/licenses/mit-license.php
 * 
 * Copyright 2017, Codrops
 * http://www.codrops.com
 */
{
	// Helper vars and functions.
	const extend = function(a, b) {
		for( let key in b ) { 
			if( b.hasOwnProperty( key ) ) {
				a[key] = b[key];
			}
		}
		return a;
	};

	// from http://www.quirksmode.org/js/events_properties.html#position
	const getMousePos = function(ev) {
		let posx = 0;
		let posy = 0;
		if (!ev) ev = window.event;
		if (ev.pageX || ev.pageY) 	{
			posx = ev.pageX;
			posy = ev.pageY;
		}
		else if (ev.clientX || ev.clientY) 	{
			posx = ev.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
			posy = ev.clientY + document.body.scrollTop + document.documentElement.scrollTop;
		}
		return { x : posx, y : posy };
	};

	const TiltObj = function(el, options) {
		this.el = el;
		this.options = extend({}, this.options);
		extend(this.options, options);
		this.DOM = {};
		this.DOM.img = this.el.querySelector('.content__img');
		this.DOM.title = this.el.querySelector('.content__title');
		this._initEvents();
	};

	TiltObj.prototype.options = {
		movement: {
			img : { translation : {x: -10, y: -10} },
			title : { translation : {x: 25, y: 25} },
		}
	};

	TiltObj.prototype._initEvents = function() {
		this.mouseenterFn = (ev) => {
			anime.remove(this.DOM.img);
			anime.remove(this.DOM.title);
		};
		
		this.mousemoveFn = (ev) => {
			requestAnimationFrame(() => this._layout(ev));
		};
		
		this.mouseleaveFn = (ev) => {
			requestAnimationFrame(() => {
				anime({
					targets: [this.DOM.img, this.DOM.title],
					duration: 1500,
					easing: 'easeOutElastic',
					elasticity: 400,
					translateX: 0,
					translateY: 0
				});
			});
		};

		this.el.addEventListener('mousemove', this.mousemoveFn);
		this.el.addEventListener('mouseleave', this.mouseleaveFn);
		this.el.addEventListener('mouseenter', this.mouseenterFn);
	};

	TiltObj.prototype._layout = function(ev) {
		// Mouse position relative to the document.
		const mousepos = getMousePos(ev);
		// Document scrolls.
		const docScrolls = {left : document.body.scrollLeft + document.documentElement.scrollLeft, top : document.body.scrollTop + document.documentElement.scrollTop};
		const bounds = this.el.getBoundingClientRect();
		// Mouse position relative to the main element (this.DOM.el).
		const relmousepos = { x : mousepos.x - bounds.left - docScrolls.left, y : mousepos.y - bounds.top - docScrolls.top };

		// Movement settings for the animatable elements.
		const t = {
			img: this.options.movement.img.translation,
			title: this.options.movement.title.translation,
		};
			
		const transforms = {
			img : {
				x: (-1*t.img.x - t.img.x)/bounds.width*relmousepos.x + t.img.x,
				y: (-1*t.img.y - t.img.y)/bounds.height*relmousepos.y + t.img.y
			},
			title : {
				x: (-1*t.title.x - t.title.x)/bounds.width*relmousepos.x + t.title.x,
				y: (-1*t.title.y - t.title.y)/bounds.height*relmousepos.y + t.title.y
			}
		};
		this.DOM.img.style.WebkitTransform = this.DOM.img.style.transform = 'translateX(' + transforms.img.x + 'px) translateY(' + transforms.img.y + 'px)';
		this.DOM.title.style.WebkitTransform = this.DOM.title.style.transform = 'translateX(' + transforms.title.x + 'px) translateY(' + transforms.title.y + 'px)';
	};

	const DOM = {};
	DOM.svg = document.querySelector('.morph');
	DOM.shapeEl = DOM.svg.querySelector('path');
	DOM.contentElems = Array.from(document.querySelectorAll('#a-1, #a-2, #a-3, #a-4, #a-5'));
	DOM.contentLinks = Array.from(document.querySelectorAll('.content__link'));
	DOM.footer = document.querySelector('#a-6');
	const contentElemsTotal = DOM.contentElems.length;
	const shapes = [
		{
			path: 'M7164.24,7507.86c82.3-94.62,171.18-147.29,258.08-175.99c122.13-40.33,240.32-33.3,330.73-28.76  c97.7,4.9,180.44-10.96,250.38-43c99.86-45.75,173.65-124.48,227.65-222.89c63.22-115.2,99.33-257.36,118.44-405.13  c22.73-175.78,21.4-359.5,13.01-515.24c-7.51-139.32-20.66-256.24-27.3-325.05c-7.79-80.78-28.69-157.79-58.99-226.93  c-38.14-87.04-91.18-161.6-151.72-215.45c-72.54-64.53-155.85-99.33-237.2-90.27c-84.56,9.42-167.87,22.88-249.29,39.39  c-100.61,20.41-198.34,45.48-292,73.35c-96.65,28.77-188.96,60.52-275.6,93.2c-127.11,47.94-242.02,97.89-340.55,143.37  c-148.03,68.32-520,63.32-895.51,117.45c-244.76,35.28-491.02,95.69-677.75,217.9c-148.74,97.34-259.71,233.9-302.06,428.21  c-18.2,83.52-12.01,166.17,14.14,246.82c22.35,68.92,59.27,136.36,107.99,201.63c51.76,69.33,116.84,136.2,191.92,199.74  c51.25,43.37,107.16,85.2,166.67,125.21c82.41,55.4,171.74,107.31,265.18,155c103.3,52.73,211.62,100.3,321.18,141.73  c115.06,43.51,231.47,80.26,344.86,109.1c140.46,35.73,276.27,59.33,399.1,68.64c108.9,8.26,207.6,5.29,290.28-10.41  C7047.78,7592.03,7119.9,7558.84,7164.24,7507.86z',
			pathAlt: 'M7164.24,7507.86c82.3-94.62,171.18-147.29,258.08-175.99c122.13-40.33,240.32-33.3,330.73-28.76  c97.7,4.9,180.44-10.96,250.38-43c99.86-45.75,173.65-124.48,227.65-222.89c63.22-115.2,99.33-257.36,118.44-405.13  c22.73-175.78,21.4-359.5,13.01-515.24c-7.51-139.32-20.66-256.24-27.3-325.05c-7.79-80.78-28.69-157.79-58.99-226.93  c-38.14-87.04-91.18-161.6-151.72-215.45c-72.54-64.53-155.85-99.33-237.2-90.27c-84.56,9.42-167.87,22.88-249.29,39.39  c-100.61,20.41-198.34,45.48-292,73.35c-96.65,28.77-188.96,60.52-275.6,93.2c-127.11,47.94-242.02,97.89-340.55,143.37  c-148.03,68.32-520,63.32-895.51,117.45c-244.76,35.28-491.02,95.69-677.75,217.9c-148.74,97.34-259.71,233.9-302.06,428.21  c-18.2,83.52-12.01,166.17,14.14,246.82c22.35,68.92,59.27,136.36,107.99,201.63c51.76,69.33,116.84,136.2,191.92,199.74  c51.25,43.37,107.16,85.2,166.67,125.21c82.41,55.4,171.74,107.31,265.18,155c103.3,52.73,211.62,100.3,321.18,141.73  c115.06,43.51,231.47,80.26,344.86,109.1c140.46,35.73,276.27,59.33,399.1,68.64c108.9,8.26,207.6,5.29,290.28-10.41  C7047.78,7592.03,7119.9,7558.84,7164.24,7507.86z',
			scaleX: 0.5,
			scaleY: 0.5,
			rotate: 0,
			tx: 0,
			ty: 0,
			fill: {
				color: '#B7D8A1',
				duration: 500,
				easing: 'linear'
			},
			animation: {
				path: {
					duration: 3000,
					easing: 'easeOutElastic',
					elasticity: 600
				},
				svg: {
					duration: 2000,
					easing: 'easeOutElastic'
				}
			}
		},
		{
			path: 'M4708.65,13040.37c134.4-154.58,279.96-238.16,421.63-282.24c187.23-58.25,367.65-47.52,506.52-40.54  c232.76,11.7,411.66-51.37,548.47-164.32c179.29-148.02,286.29-381.7,347.52-645c65.33-280.93,78.55-595.57,71.86-875.85  c-7.15-299.72-37.08-560.15-50.39-698.06c-28.96-299.97-172.48-567.06-354.23-716.49c-109.05-89.66-231.86-136.96-351.96-123.59  c-118.24,13.16-220,53.61-309.49,112.92c-105.91,70.19-194.65,166.79-273.21,275.83c-104.21,144.65-190.52,311.19-275.27,467  c-61.83,113.69-122.84,221.66-189.35,311.26c-67.82,91.36-141.38,163.61-227.4,203.32c-113.25,52.28-337.11,36.35-619.6-5.59  c-205.97-30.58-443.11-74.99-691.25-116.87c-200.15-33.78-407.47-65.92-611.37-87.83c-191.34-20.56-379.66-32.11-556.24-27.57  c-167.56,4.31-324.54,23.12-463.47,62.48c-138.34,39.19-258.79,98.76-353.97,184.7c-102.07,92.15-175.1,214.62-209.97,374.78  c-29.45,135.24-18.35,269.06,25.74,399.5c44.68,132.21,123.25,260.94,227.81,384.15c147.71,174.05,347.29,337.07,576.5,483.32  c183.85,117.3,386.76,223.81,597.26,316.54c251.96,111,514.78,202.26,768.8,268.71c393.84,103.01,766.5,146.34,1044.64,111  C4487.53,13189.13,4627.55,13133.64,4708.65,13040.37z',
			pathAlt: 'M4708.65,13040.37c134.4-154.58,279.96-238.16,421.63-282.24c187.23-58.25,367.65-47.52,506.52-40.54  c232.76,11.7,411.66-51.37,548.47-164.32c179.29-148.02,286.29-381.7,347.52-645c65.33-280.93,78.55-595.57,71.86-875.85  c-7.15-299.72-37.08-560.15-50.39-698.06c-28.96-299.97-172.48-567.06-354.23-716.49c-109.05-89.66-231.86-136.96-351.96-123.59  c-118.24,13.16-220,53.61-309.49,112.92c-105.91,70.19-194.65,166.79-273.21,275.83c-104.21,144.65-190.52,311.19-275.27,467  c-61.83,113.69-122.84,221.66-189.35,311.26c-67.82,91.36-141.38,163.61-227.4,203.32c-113.25,52.28-337.11,36.35-619.6-5.59  c-205.97-30.58-443.11-74.99-691.25-116.87c-200.15-33.78-407.47-65.92-611.37-87.83c-191.34-20.56-379.66-32.11-556.24-27.57  c-167.56,4.31-324.54,23.12-463.47,62.48c-138.34,39.19-258.79,98.76-353.97,184.7c-102.07,92.15-175.1,214.62-209.97,374.78  c-29.45,135.24-18.35,269.06,25.74,399.5c44.68,132.21,123.25,260.94,227.81,384.15c147.71,174.05,347.29,337.07,576.5,483.32  c183.85,117.3,386.76,223.81,597.26,316.54c251.96,111,514.78,202.26,768.8,268.71c393.84,103.01,766.5,146.34,1044.64,111  C4487.53,13189.13,4627.55,13133.64,4708.65,13040.37z',
			scaleX: 0.7,
			scaleY: 0.7,
			rotate: 0,
			tx: -0,
			ty: 0,
			fill: {
				color: '#B7D8A1',
				duration: 500,
				easing: 'linear'
			},
			animation: {
				path: {
					duration: 2000,
					easing: 'easeOutElastic',
					elasticity: 600
				},
				svg: {
					duration: 2000,
					easing: 'easeOutElastic'
				}
			}
		},
		{
			// N
			path: 'M5882.38,2837.78c70.59-25.4,81.98-83.19,83.98-151.93c2.22-76.54-7.21-166.67,40.43-240.8  c31.1-48.39,86.52-89.96,185.39-116.48c72.77-19.52,132.1-3.01,182.89,33.72c54.7,39.56,99.47,102.56,140.41,169.24  c66.21,107.86,122.39,225.35,194.29,268.8c70.14,42.38,165.69,31.33,263.06-66.44c76.07-76.38,136.7-144.3,187-218.86  c56.04-83.09,99.26-174.43,136.7-294.96c12.45-40.08,24.27-83.4,35.71-130.71c23.78-98.37,34.41-235.49,30.87-372.44  c-2.29-88.53-10.49-177-24.89-254.88c-28.33-153.23-80.62-265.5-158.95-256.75c-72.66,8.11-107.27,47.59-122.59,102.69  c-25.53,91.83,2.5,227.08-2.8,332.93c-4.6,91.82-34.28,161.52-145.78,161.56c-46.61,0.02-88.29-46.51-130.12-113.45  c-44.17-70.67-88.51-164.1-138.99-249.51c-33.73-57.07-70.2-110.55-111.19-151.29c-40.76-40.5-85.99-68.4-137.44-74.67  c-49.59-6.05-200.89-51.56-344.5,105.34c-48.74,53.25-96.59,129.8-139.28,239.13c-27.89,71.41-53.57,156.81-75.86,258.82  c-20.18,92.36-37.63,179.04-52.3,259.82c-20.87,114.94-36.09,217.94-45.5,308.36c-16.13,154.93-15.2,272.94,3.63,350.85  C5759.06,2829.03,5807.19,2864.83,5882.38,2837.78z',
			pathAlt: 'M5882.38,2837.78c70.59-25.4,81.98-83.19,83.98-151.93c2.22-76.54-7.21-166.67,40.43-240.8  c31.1-48.39,86.52-89.96,185.39-116.48c72.77-19.52,132.1-3.01,182.89,33.72c54.7,39.56,99.47,102.56,140.41,169.24  c66.21,107.86,122.39,225.35,194.29,268.8c70.14,42.38,165.69,31.33,263.06-66.44c76.07-76.38,136.7-144.3,187-218.86  c56.04-83.09,99.26-174.43,136.7-294.96c12.45-40.08,24.27-83.4,35.71-130.71c23.78-98.37,34.41-235.49,30.87-372.44  c-2.29-88.53-10.49-177-24.89-254.88c-28.33-153.23-80.62-265.5-158.95-256.75c-72.66,8.11-107.27,47.59-122.59,102.69  c-25.53,91.83,2.5,227.08-2.8,332.93c-4.6,91.82-34.28,161.52-145.78,161.56c-46.61,0.02-88.29-46.51-130.12-113.45  c-44.17-70.67-88.51-164.1-138.99-249.51c-33.73-57.07-70.2-110.55-111.19-151.29c-40.76-40.5-85.99-68.4-137.44-74.67  c-49.59-6.05-200.89-51.56-344.5,105.34c-48.74,53.25-96.59,129.8-139.28,239.13c-27.89,71.41-53.57,156.81-75.86,258.82  c-20.18,92.36-37.63,179.04-52.3,259.82c-20.87,114.94-36.09,217.94-45.5,308.36c-16.13,154.93-15.2,272.94,3.63,350.85  C5759.06,2829.03,5807.19,2864.83,5882.38,2837.78z',
			scaleX: 1.0,
			scaleY: 1.0,
			rotate: 0,
			tx: 480,
			ty: 100,
			fill: {
				color: '#B7D8A1',
				duration: 500,
				easing: 'linear'
			},
			animation: {
				path: {
					duration: 3000,
					easing: 'easeOutElastic',
					elasticity: 600
				},
				svg: {
					duration: 2500,
					easing: 'easeOutElastic'
				}
			}
		},
		{
			// F
			path: 'M10853.98,2273.77c29.09-30,86.41-15.62,153.11,5.04c66.7,20.65,142.79,47.58,209.43,42.67  c50.7-3.74,95.93-25.9,127.41-83.27c17.1-31.17,31.47-85.28,30.86-141.89c-0.44-40.55-8.56-82.38-28.85-118  c-22.11-38.79-58.66-70.19-115.47-84.51c-76.81-19.36-130.9-41.03-168.17-63.96c-62.13-38.22-77.56-79.98-73.73-120.49  c3.68-38.89,25.12-76.64,40.07-109.01c27.43-59.43,77.85-90.36,140.02-107.18c82.39-22.28,185.43-19.76,283.04-25.89  c102.76-6.45,199.51-22.48,259.78-87.12c41.95-44.99,66.24-113.51,62.6-218.74c-1.17-33.89-5.24-71.59-12.55-113.54  c-11.64-66.79-69.23-102.77-146.37-118.93c-77.13-16.16-173.8-12.5-263.59-0.01c-75.61,10.51-146.33,27.29-196.4,43.75  c-47.14,15.5-102.16,37.7-158.64,63.83c-44.67,20.67-90.26,43.79-133.59,68.01c-98.23,54.91-184.83,115.43-222.78,165.65  c-88.39,116.96-340.71,477.16-512.44,846.77c-112.92,243.05-190.99,490.18-164.69,674.9c9.82,68.95,35.7,136.55,75.3,193.22  c77.14,110.42,206.32,179.36,370.07,135.95c190.58-50.52,224.53-182.18,249.46-341.19c12.89-82.2,23.36-171.71,51.83-261.09  C10736.38,2434.92,10778.87,2351.23,10853.98,2273.77z',
			pathAlt: 'M10853.98,2273.77c29.09-30,86.41-15.62,153.11,5.04c66.7,20.65,142.79,47.58,209.43,42.67  c50.7-3.74,95.93-25.9,127.41-83.27c17.1-31.17,31.47-85.28,30.86-141.89c-0.44-40.55-8.56-82.38-28.85-118  c-22.11-38.79-58.66-70.19-115.47-84.51c-76.81-19.36-130.9-41.03-168.17-63.96c-62.13-38.22-77.56-79.98-73.73-120.49  c3.68-38.89,25.12-76.64,40.07-109.01c27.43-59.43,77.85-90.36,140.02-107.18c82.39-22.28,185.43-19.76,283.04-25.89  c102.76-6.45,199.51-22.48,259.78-87.12c41.95-44.99,66.24-113.51,62.6-218.74c-1.17-33.89-5.24-71.59-12.55-113.54  c-11.64-66.79-69.23-102.77-146.37-118.93c-77.13-16.16-173.8-12.5-263.59-0.01c-75.61,10.51-146.33,27.29-196.4,43.75  c-47.14,15.5-102.16,37.7-158.64,63.83c-44.67,20.67-90.26,43.79-133.59,68.01c-98.23,54.91-184.83,115.43-222.78,165.65  c-88.39,116.96-340.71,477.16-512.44,846.77c-112.92,243.05-190.99,490.18-164.69,674.9c9.82,68.95,35.7,136.55,75.3,193.22  c77.14,110.42,206.32,179.36,370.07,135.95c190.58-50.52,224.53-182.18,249.46-341.19c12.89-82.2,23.36-171.71,51.83-261.09  C10736.38,2434.92,10778.87,2351.23,10853.98,2273.77z',
			scaleX: 1.0,
			scaleY: 1.0,
			rotate: 0,
			tx: 450,
			ty: 30,
			fill: {
				color: '#B7D8A1',
				duration: 500,
				easing: 'linear'
			},
			animation: {
				path: {
					duration: 3000,
					easing: 'easeOutElastic',
					elasticity: 600
				},
				svg: {
					duration: 2500,
					easing: 'easeOutElastic'
				}
			}
		},
		{
			// C
			path: 'M1449.64,2601.78c25.98,37.11,60.64,72.39,101.93,104.86c68.82,54.11,156.03,100.39,252.12,134.32  c57.49,20.3,118.16,36.18,179.96,46.65c103.33,17.52,209.82,19.95,309.93,2.75c61.12-10.5,119.87-28.32,174.06-54.5  c110.98-53.6,207.16-132.11,282.3-218.38c162.24-186.27,226.36-408.71,129.48-494.64c-67.27-59.67-127.25-70.79-185.21-54.27  c-79.38,22.63-154.98,97.12-240.32,169.79c-100.34,85.44-214.15,168.37-363.44,161.54c-57.74-2.64-120.79-18.71-190.42-53.25  c-78.08-38.74-126.94-103.88-152.85-181.87c-18.41-55.4-25.24-117.29-22.73-180.81c2.32-58.76,12.63-118.92,29.15-176.62  c31.46-109.88,85.44-210.86,149.66-276.37c42.85-43.72,90.27-71.63,138.59-75.86c46.47-4.07,87.58-34.66,114.89-74.74  c27.91-40.95,41.43-91.8,31.59-134.38c-10.07-43.58-44.59-78.49-113.19-85.29c-40.32-3.99-92.4,1.73-158.21,21.12  c-31.89,9.4-67.15,24.02-103.43,41.92c-44.99,22.19-91.56,49.41-135.24,77.89c-80.14,52.27-150.54,108.83-183.64,146.54  c-156.41,178.18-223.07,377.11-227.11,569.83c-1.59,75.72,6.49,150.49,22.59,222.66c16.14,72.36,40.35,142.12,70.96,207.62  C1386.48,2502.72,1416.33,2554.19,1449.64,2601.78z',
			pathAlt: 'M1449.64,2601.78c25.98,37.11,60.64,72.39,101.93,104.86c68.82,54.11,156.03,100.39,252.12,134.32  c57.49,20.3,118.16,36.18,179.96,46.65c103.33,17.52,209.82,19.95,309.93,2.75c61.12-10.5,119.87-28.32,174.06-54.5  c110.98-53.6,207.16-132.11,282.3-218.38c162.24-186.27,226.36-408.71,129.48-494.64c-67.27-59.67-127.25-70.79-185.21-54.27  c-79.38,22.63-154.98,97.12-240.32,169.79c-100.34,85.44-214.15,168.37-363.44,161.54c-57.74-2.64-120.79-18.71-190.42-53.25  c-78.08-38.74-126.94-103.88-152.85-181.87c-18.41-55.4-25.24-117.29-22.73-180.81c2.32-58.76,12.63-118.92,29.15-176.62  c31.46-109.88,85.44-210.86,149.66-276.37c42.85-43.72,90.27-71.63,138.59-75.86c46.47-4.07,87.58-34.66,114.89-74.74  c27.91-40.95,41.43-91.8,31.59-134.38c-10.07-43.58-44.59-78.49-113.19-85.29c-40.32-3.99-92.4,1.73-158.21,21.12  c-31.89,9.4-67.15,24.02-103.43,41.92c-44.99,22.19-91.56,49.41-135.24,77.89c-80.14,52.27-150.54,108.83-183.64,146.54  c-156.41,178.18-223.07,377.11-227.11,569.83c-1.59,75.72,6.49,150.49,22.59,222.66c16.14,72.36,40.35,142.12,70.96,207.62  C1386.48,2502.72,1416.33,2554.19,1449.64,2601.78z',
			scaleX: 1.2,
			scaleY: 1.2,
			rotate: 20,
			tx: 300,
			ty: 100,
			fill: {
				color: '#B7D8A1',
				duration: 500,
				easing: 'linear'
			},
			animation: {
				path: {
					duration: 3000,
					easing: 'easeOutElastic',
					elasticity: 600
				},
				svg: {
					duration: 2500,
					easing: 'easeOutElastic'
				}
			}
		},
		{
			path: 'M1915.56,6369.29c115.24-249.92,286.62-494.61,346.37-573.67c50.88-67.33,232.15-162.29,345.51-199.58  c113.37-37.28,384.6-76.91,406.79,50.44c78.46,450.27-399.59,171.14-491.69,370.64c-26.74,57.92-84.46,141.46,135.41,196.88  c22.51,5.67,40.27,15.34,54.11,27.67c28.44-74.91,71.8-148.4,132.74-217.83c50.89-57.98,215.6-173.48,327.18-206.35  c305.48-90.01,229.32,200.13,96.77,211.72c-199.65,17.47-379.3,557.03-109.86,690.7c398.65,197.78,518.91-386.16,758.77-173.4  c109.81,97.4-47.38,421.2-319.02,552.4c-261.86,126.48-660.88,1.21-788.68-181.35c-82.15-117.35-137.08-265.17-141.03-419.83  c-91.47,22.74-221.48-72.21-263.55-28.82c-208.1,214.59-43,500.56-298.93,568.4c-166.25,44.07-279.37-84.46-298.79-220.83  c-4.98-35-4.38-73.33,0.75-114.01c-63.09,134.13-144.33,232.59-262.63,351.37c-98.11,98.51-194.39,109.65-265.06,66.95  c-158.83-95.97-241.5-550.48-521.53-475.35c-389.28,104.43-110.14,440.42-312.15,513.1s-210.22-304.95-52.07-1028.75  s485.9-617.39,563.91-607.88c255.94,31.2,359.08,593.48,521.69,593.42c319.56-0.12-27.86-568.11,273.23-601.73  C1927.88,5494.15,1974.33,6067.86,1915.56,6369.29L1915.56,6369.29z',
			pathAlt: 'M1915.56,6369.29c115.24-249.92,286.62-494.61,346.37-573.67c50.88-67.33,232.15-162.29,345.51-199.58  c113.37-37.28,384.6-76.91,406.79,50.44c78.46,450.27-399.59,171.14-491.69,370.64c-26.74,57.92-84.46,141.46,135.41,196.88  c22.51,5.67,40.27,15.34,54.11,27.67c28.44-74.91,71.8-148.4,132.74-217.83c50.89-57.98,215.6-173.48,327.18-206.35  c305.48-90.01,229.32,200.13,96.77,211.72c-199.65,17.47-379.3,557.03-109.86,690.7c398.65,197.78,518.91-386.16,758.77-173.4  c109.81,97.4-47.38,421.2-319.02,552.4c-261.86,126.48-660.88,1.21-788.68-181.35c-82.15-117.35-137.08-265.17-141.03-419.83  c-91.47,22.74-221.48-72.21-263.55-28.82c-208.1,214.59-43,500.56-298.93,568.4c-166.25,44.07-279.37-84.46-298.79-220.83  c-4.98-35-4.38-73.33,0.75-114.01c-63.09,134.13-144.33,232.59-262.63,351.37c-98.11,98.51-194.39,109.65-265.06,66.95  c-158.83-95.97-241.5-550.48-521.53-475.35c-389.28,104.43-110.14,440.42-312.15,513.1s-210.22-304.95-52.07-1028.75  s485.9-617.39,563.91-607.88c255.94,31.2,359.08,593.48,521.69,593.42c319.56-0.12-27.86-568.11,273.23-601.73  C1927.88,5494.15,1974.33,6067.86,1915.56,6369.29L1915.56,6369.29z',
			scaleX: 1.4,
			scaleY: 1.9,
			rotate: 0,
			tx: 320,
			ty: 100,
			fill: {
				color: '#e0ecd7',
				duration: 500,
				easing: 'linear'
			},
			animation: {
				path: {
					duration: 3000,
					easing: 'easeOutElastic',
					elasticity: 600
				},
				svg: {
					duration: 2000,
					easing: 'easeOutElastic'
				}
			}
		}
	];
	let step;
	
	if ( document.documentElement.clientWidth < 980 ) {
		shapes[2].scaleX = 0.6;
		shapes[2].scaleY = 0.6;
		shapes[2].tx = 250;
		
		shapes[3].scaleX = 0.5;
		shapes[3].scaleY = 0.5;
		shapes[3].tx = 250;
		
		shapes[4].scaleX = 0.5;
		shapes[4].scaleY = 0.5;
		shapes[4].tx = 350;
		
	}
	
	window.addEventListener( "resize", function( event ) {
		if ( document.documentElement.clientWidth < 980 ) {
			shapes[2].scaleX = 0.6;
			shapes[2].scaleY = 0.6;
			shapes[2].tx = 250;
			
			shapes[3].scaleX = 0.5;
			shapes[3].scaleY = 0.5;
			shapes[3].tx = 250;
			
			shapes[4].scaleX = 0.5;
			shapes[4].scaleY = 0.5;
			shapes[4].tx = 350;
			
		}
		else {
			
			shapes[2].scaleX = 1.1;
			shapes[2].scaleY = 1.1;
			shapes[2].tx = 480;
			
			shapes[3].scaleX = 1.0;
			shapes[3].scaleY = 1.0;
			shapes[3].tx = 450;
			
			shapes[4].scaleX = 1.2;
			shapes[4].scaleY = 1.2;
			shapes[4].tx = 300;
		}
	} );

	const initShapeLoop = function(pos) {
		pos = pos || 0;
		anime.remove(DOM.shapeEl);
		anime({
			targets: DOM.shapeEl,
			easing: 'linear',
			d: [{value: shapes[pos].pathAlt, duration:3500}, {value: shapes[pos].path, duration:3500}],
			loop: true,
			fill: {
				value: shapes[pos].fill.color,
				duration: shapes[pos].fill.duration,
				easing: shapes[pos].fill.easing
			},
			direction: 'alternate'
		});
	};

	const initShapeEl = function() {
		anime.remove(DOM.svg);
		anime({
			targets: DOM.svg,
			duration: 1,
			easing: 'linear',
			scaleX: shapes[0].scaleX,
			scaleY: shapes[0].scaleY,
			translateX: shapes[0].tx+'px',
			translateY: shapes[0].ty+'px',
			rotate: shapes[0].rotate+'deg'
		});

		initShapeLoop();
	};

	const createScrollWatchers = function() {
		DOM.contentElems.forEach((el,pos) => {
			const scrollElemToWatch = pos ? DOM.contentElems[pos] : DOM.footer;
			pos = pos ? pos : contentElemsTotal;
			const watcher = scrollMonitor.create(scrollElemToWatch,-300);
			
			watcher.enterViewport(function() {
				step = pos;
				anime.remove(DOM.shapeEl);
				anime({
					targets: DOM.shapeEl,
					duration: shapes[pos].animation.path.duration,
					easing: shapes[pos].animation.path.easing,
					elasticity: shapes[pos].animation.path.elasticity || 0,
					d: shapes[pos].path,
					fill: {
						value: shapes[pos].fill.color,
						duration: shapes[pos].fill.duration,
						easing: shapes[pos].fill.easing
					},
					complete: function() {
						initShapeLoop(pos);
					}
				});

				anime.remove(DOM.svg);
				anime({
					targets: DOM.svg,
					duration: shapes[pos].animation.svg.duration,
					easing: shapes[pos].animation.svg.easing,
					elasticity: shapes[pos].animation.svg.elasticity || 0,
					scaleX: shapes[pos].scaleX,
					scaleY: shapes[pos].scaleY,
					translateX: shapes[pos].tx+'px',
					translateY: shapes[pos].ty+'px',
					rotate: shapes[pos].rotate+'deg'
				});
			});

			watcher.exitViewport(function() {
				const idx = !watcher.isAboveViewport ? pos-1 : pos+1;

				if( idx <= contentElemsTotal && step !== idx ) {
					step = idx;
					anime.remove(DOM.shapeEl);
					anime({
						targets: DOM.shapeEl,
						duration: shapes[idx].animation.path.duration,
						easing: shapes[idx].animation.path.easing,
						elasticity: shapes[idx].animation.path.elasticity || 0,
						d: shapes[idx].path,
						fill: {
							value: shapes[idx].fill.color,
							duration: shapes[idx].fill.duration,
							easing: shapes[idx].fill.easing
						},
						complete: function() {
							initShapeLoop(idx);
						}
					});

					anime.remove(DOM.svg);
					anime({
						targets: DOM.svg,
						duration: shapes[idx].animation.svg.duration,
						easing: shapes[idx].animation.svg.easing,
						elasticity: shapes[idx].animation.svg.elasticity || 0,
						scaleX: shapes[idx].scaleX,
						scaleY: shapes[idx].scaleY,
						translateX: shapes[idx].tx+'px',
						translateY: shapes[idx].ty+'px',
						rotate: shapes[idx].rotate+'deg'
					});
				}
			});
		});
	};

	const init = function() {
		imagesLoaded(document.body, () => {
			initShapeEl();
			createScrollWatchers();
			Array.from(document.querySelectorAll('.home-why-we-block')).forEach(el => new TiltObj(el));
			// Remove loading class from body
			document.body.classList.remove('loading');
		});
	}

	init();
};